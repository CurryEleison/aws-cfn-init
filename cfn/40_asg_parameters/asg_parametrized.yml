AWSTemplateFormatVersion: '2010-09-09'
Description: Stack with a launch template and cfn-init
# Create with 
# aws cloudformation create-stack --template-body file://cfn/40_asg_parameters/asg_parametrized.yml --stack-name ASG --capabilities CAPABILITY_IAM
# Update with
# aws cloudformation update-stack --template-body file://cfn/arm64-asg-linux.yml --parameters ParameterKey=KeyName,ParameterValue=tpe-ed25519 ParameterKey=SecurityGroups,ParameterValue=sg-01e6e524fed71df26 ParameterKey=Subnets,ParameterValue=subnet-918fc1fb\\,subnet-efaa2f93  --stack-name armasg --capabilities CAPABILITY_IAM
Parameters:
  Namespace:
    Description: Environment. Used to identify various things as they are created
    Type: String
    Default: Development
  LatestAmiId:
    Description: Region specific image from the Parameter Store
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2'
  InstanceType:
    Description: Amazon EC2 instance type for the instances
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: "/Development/InstanceType"
  # IAMRole:
  #   Description: EC2 attached IAM role
  #   Type: String
  #   Default: DevOpsProTestingRole
  #   ConstraintDescription: must be an existing IAM role which will be attached to EC2 instance.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::KeyPair::KeyName>"
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: "/Development/KeyName"
  SecurityGroups:
    Description: The security group to use
    #Type: "AWS::SSM::Parameter::Value<List<AWS::EC2::SecurityGroup::Id>>"
    Type: "AWS::SSM::Parameter::Value<List<String>>"
    ConstraintDescription: Must be valid security group(s)
    Default: "/Development/SecurityGroups"
  Subnets:
    # Type: "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>"
    Type: "AWS::SSM::Parameter::Value<List<String>>"
    Description: A list of subnets for the Auto Scaling group
    Default: "/Development/Subnets"
Resources:
  ParameterReadPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Roles:
        - !Ref AsgRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "ssm:DescribeParameters"
            Resource: "*"
          - Effect: Allow
            Action:
              - "ssm:GetParameter*"
            Resource: !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}:*:parameter/${Namespace}/*"
  CloudWatchRetentionInstancePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Roles:
        - !Ref AsgRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "logs:PutRetentionPolicy"
            Resource: !Sub "arn:${AWS::Partition}:logs:*:*:log-group:/${Namespace}/*"
  S3WorkPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Roles:
        - !Ref AsgRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
            - "s3:Get*"
            - "s3:List*"
            - "s3-object-lambda:Get*"
            - "s3-object-lambda:List*"
            Resource:
            - "arn:aws:s3:::templabs-devopspro-cicd/*"
            - "arn:aws:s3:::templabs-devopspro-cicd"
          - Effect: Allow
            Action: "s3:ListAllMyBuckets"
            Resource: "*"
  AsgRole:
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
  AsgInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: /
      Roles: [!Ref AsgRole]
  SimpleLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - 01_config-amazon-cloudwatch-agent
            # - 03_restart_amazon-cloudwatch-agent
            - 99_install_amazon_codedeploy_agent
        01_config-amazon-cloudwatch-agent:
          packages:
            yum:
              amazon-cloudwatch-agent: []
          files:
            "/tmp/cloudwatch-config.json":
              content: !Sub |
                {
                  "agent": {
                    "run_as_user": "root"
                  },
                  "logs": {
                    "logs_collected": {
                      "files": {
                        "collect_list": [
                          {
                            "file_path": "/var/log/messages",
                            "log_group_name": "/${Namespace}/var/log/messages",
                            "log_stream_name": "{instance_id}",
                            "retention_in_days": 60
                          },
                          {
                            "file_path": "/opt/codedeploy-agent/deployment-root/deployment-logs/codedeploy-agent-deployments.log",
                            "log_group_name": "/${Namespace}/codedeploy/logs",
                            "log_stream_name": "{instance_id}",
                            "retention_in_days": 60
                          }
                        ]
                      }
                    }
                  },
                  "metrics": {
                    "metrics_collected": {
                      "statsd": {
                        "metrics_aggregation_interval": 60,
                        "metrics_collection_interval": 60,
                        "service_address": ":8125"
                      }
                    }
                  }
                }
          commands:
            setup:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/tmp/cloudwatch-config.json
        # Invoke amazon-cloudwatch-agent-ctl to restart the AmazonCloudWatchAgent.
        # 03_restart_amazon-cloudwatch-agent:
        #   commands:
        #     01_stop_service:
        #       command: powershell -Command "C:\\'Program Files'\\Amazon\\AmazonCloudWatchAgent\\amazon-cloudwatch-agent-ctl.ps1 -a stop"
        #     02_start_service:
        #       command: powershell -Command "C:\\'Program Files'\\Amazon\\AmazonCloudWatchAgent\\amazon-cloudwatch-agent-ctl.ps1 -a fetch-config -m ec2 -c file:C:\\ProgramData\\Amazon\\AmazonCloudWatchAgent\\amazon-cloudwatch-agent.json -s"
        99_install_amazon_codedeploy_agent:
          packages:
            yum:
              ruby: []
              wget: []
          commands:
            download:
              command: !Sub wget https://aws-codedeploy-${AWS::Region}.s3.${AWS::Region}.amazonaws.com/latest/install --output-document=/tmp/install
            enablecodedeployinstaller:
              command: chmod +x /tmp/install
            installcodedeploy:
              command: /tmp/install auto
            

    Properties: 
      LaunchTemplateName: !Sub ${AWS::StackName}-launch-template
      LaunchTemplateData:
        ImageId: !Ref LatestAmiId
        InstanceType: !Ref InstanceType
        IamInstanceProfile: 
          Name: !Ref AsgInstanceProfile
        KeyName: !Ref KeyName
        SecurityGroupIds: !Ref SecurityGroups
        UserData: 
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            yum update -y
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource SimpleLaunchTemplate --region ${AWS::Region}
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Environment
                Value: !Ref Namespace
              - Key: Name
                Value: !Ref "AWS::StackName"
  SimpleScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref SimpleLaunchTemplate
        Version: !GetAtt SimpleLaunchTemplate.LatestVersionNumber
      MaxSize: '1'
      MinSize: '0'
      DesiredCapacity: '1'
      VPCZoneIdentifier: !Ref Subnets
