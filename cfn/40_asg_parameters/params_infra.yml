AWSTemplateFormatVersion: '2010-09-09'
Description: Parameters stack for ASG stack
Parameters:
  Namespace:
    Description: Environment. Used to identify various things as they are created
    Type: String
    Default: Development
    AllowedPattern: "^[a-zA-Z][a-zA-Z0-9]*$"
    ConstraintDescription: Letters and numbers only
  KeyName:
    Description: Keypair for EC2 acccess
    Type: String
  InstanceType:
    Description: Amazon EC2 instance type for the instances
    Type: String
    AllowedValues:
      - t4g.micro
      - t4g.small
      - t4g.medium
    Default: t4g.micro
  SecurityGroups:
    Description: The security group to use
    Type: "List<AWS::EC2::SecurityGroup::Id>"
    ConstraintDescription: Must be valid security group(s)
  Subnets:
    Type: "List<AWS::EC2::Subnet::Id>"
    Description: A list of subnets for the Auto Scaling group
Resources:
  Ec2KeyName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Description: "Key-pair for EC2 access"
      Name: !Sub "/${Namespace}/KeyName"
      Type: String
      Value: !Ref KeyName
      AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*"
  InstanceTypeParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Description: "Instance type for the asg"
      Name: !Sub "/${Namespace}/InstanceType"
      Type: String
      Value: !Ref InstanceType
      # AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*"
  SecurityGroupsParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Description: "Security groups"
      Name: !Sub "/${Namespace}/SecurityGroups"
      Type: StringList
      Value: !Join [",", !Ref SecurityGroups]
      AllowedPattern: "^sg-[a-f0-9]{8,}$"
  SubnetsParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Description: "Subnets to place instance in"
      Name: !Sub "/${Namespace}/Subnets"
      Type: StringList
      Value: !Join [",", !Ref Subnets]
      AllowedPattern: "^subnet-[a-f0-9]{8,}$"
  CloudWatchAgentConfig:
    Type: "AWS::SSM::Parameter"
    Properties:
      Description: "CloudWatch agent config json (linux version)"
      Name: !Sub "/${Namespace}/AmazonCloudWatch-linux"
      Type: String
      Value: !Sub |
        {
          "agent": {
            "run_as_user": "root"
          },
          "logs": {
            "logs_collected": {
              "files": {
                "collect_list": [
                  {
                    "file_path": "/var/log/messages",
                    "log_group_name": "/${Namespace}/var/log/messages",
                    "log_stream_name": "{instance_id}",
                    "retention_in_days": 60
                  },
                  {
                    "file_path": "/var/log/secure",
                    "log_group_name": "/${Namespace}/var/log/secure",
                    "log_stream_name": "{instance_id}",
                    "retention_in_days": 60
                  },
                  {
                    "file_path": "/var/log/cron",
                    "log_group_name": "/${Namespace}/var/log/cron",
                    "log_stream_name": "{instance_id}",
                    "retention_in_days": 60
                  },
                  {
                    "file_path": "/var/log/yum.log",
                    "log_group_name": "/${Namespace}/var/log/yum.log",
                    "log_stream_name": "{instance_id}",
                    "retention_in_days": 60
                  },
                  {
                    "file_path": "/opt/codedeploy-agent/deployment-root/deployment-logs/codedeploy-agent-deployments.log",
                    "log_group_name": "/${Namespace}/codedeploy/logs",
                    "log_stream_name": "{instance_id}",
                    "retention_in_days": 60
                  }
                ]
              }
            }
          },
          "metrics": {
            "append_dimensions": {
              "AutoScalingGroupName": "${!aws:AutoScalingGroupName}",
              "ImageId": "${!aws:ImageId}",
              "InstanceId": "${!aws:InstanceId}",
              "InstanceType": "${!aws:InstanceType}"
            },
            "metrics_collected": {
              "statsd": {
                "metrics_aggregation_interval": 60,
                "metrics_collection_interval": 60,
                "service_address": ":8125"
              }
            }
          }
        }

