AWSTemplateFormatVersion: '2010-09-09'
Description: Stack with a launch template and cfn-init
# Create with aws cloudformation create-stack --template-body file://cfn/asg-launchtemplate.yml --parameters ParameterKey=KeyName,ParameterValue=tpe-ed25519 ParameterKey=SecurityGroups,ParameterValue=sg-01e6e524fed71df26 ParameterKey=Subnets,ParameterValue=subnet-918fc1fb\\,subnet-efaa2f93 --disable-rollback --stack-name asg-cfn-init
Parameters:
  Namespace:
    Description: Environment. Used to identify various things as they are created
    Type: String
    Default: Development
  LatestAmiId:
    Description: Region specific image from the Parameter Store
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  InstanceType:
    Description: Amazon EC2 instance type for the instances
    Type: String
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
    Default: t3.micro
  IAMRole:
    Description: EC2 attached IAM role
    Type: String
    Default: DevOpsProTestingRole
    ConstraintDescription: must be an existing IAM role which will be attached to EC2 instance.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SecurityGroups:
    Description: The security group to use
    Type: List<AWS::EC2::SecurityGroup::Id>
    ConstraintDescription: Must be valid security group(s)
  Subnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: A list of subnets for the Auto Scaling group
Resources:
  SimpleLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - 01_config-amazon-cloudwatch-agent
            # - 03_restart_amazon-cloudwatch-agent
            - 99_install_amazon_codedeploy_agent
        01_config-amazon-cloudwatch-agent:
          packages:
            yum:
              amazon-cloudwatch-agent: []
          files:
            "/tmp/cloudwatch-config.json":
              content: !Sub |
                {
                  "agent": {
                    "run_as_user": "root"
                  },
                  "logs": {
                    "logs_collected": {
                      "files": {
                        "collect_list": [
                          {
                            "file_path": "/var/log/messages",
                            "log_group_name": "/${Namespace}/var/log/messages",
                            "log_stream_name": "{instance_id}",
                            "retention_in_days": 60
                          },
                          {
                            "file_path": "/opt/codedeploy-agent/deployment-root/deployment-logs/codedeploy-agent-deployments.log",
                            "log_group_name": "/${Namespace}/codedeploy/logs",
                            "log_stream_name": "{instance_id}",
                            "retention_in_days": 60
                          }
                        ]
                      }
                    }
                  },
                  "metrics": {
                    "metrics_collected": {
                      "statsd": {
                        "metrics_aggregation_interval": 60,
                        "metrics_collection_interval": 60,
                        "service_address": ":8125"
                      }
                    }
                  }
                }
          commands:
            setup:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/tmp/cloudwatch-config.json
        # Invoke amazon-cloudwatch-agent-ctl to restart the AmazonCloudWatchAgent.
        # 03_restart_amazon-cloudwatch-agent:
        #   commands:
        #     01_stop_service:
        #       command: powershell -Command "C:\\'Program Files'\\Amazon\\AmazonCloudWatchAgent\\amazon-cloudwatch-agent-ctl.ps1 -a stop"
        #     02_start_service:
        #       command: powershell -Command "C:\\'Program Files'\\Amazon\\AmazonCloudWatchAgent\\amazon-cloudwatch-agent-ctl.ps1 -a fetch-config -m ec2 -c file:C:\\ProgramData\\Amazon\\AmazonCloudWatchAgent\\amazon-cloudwatch-agent.json -s"
        99_install_amazon_codedeploy_agent:
          packages:
            yum:
              ruby: []
              wget: []
          commands:
            download:
              command: !Sub wget https://aws-codedeploy-${AWS::Region}.s3.${AWS::Region}.amazonaws.com/latest/install --output-document=/tmp/install
            enable:
              command: chmod +x /tmp/install
            install:
              command: /tmp/install auto
            

    Properties: 
      LaunchTemplateName: !Sub ${AWS::StackName}-launch-template
      LaunchTemplateData:
        ImageId: !Ref LatestAmiId
        InstanceType: !Ref InstanceType
        IamInstanceProfile: 
          Name: !Ref IAMRole
        KeyName: !Ref KeyName
        SecurityGroupIds: !Ref SecurityGroups
        UserData: 
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            yum update -y
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource SimpleLaunchTemplate --region ${AWS::Region}
            # yum install -y amazon-cloudwatch-agent
            # aws s3 cp s3://templabs-devopspro-cicd/_install/cloudwatch-agent-config.json /tmp/cloudwatch-agent-config.json
            # /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/tmp/cloudwatch-agent-config.json
            # yum install -y ruby wget
            # wget https://aws-codedeploy-${AWS::Region}.s3.${AWS::Region}.amazonaws.com/latest/install
            # chmod +x ./install
            # ./install auto
          
          
  SimpleScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref SimpleLaunchTemplate
        Version: !GetAtt SimpleLaunchTemplate.LatestVersionNumber
      MaxSize: '1'
      MinSize: '0'
      DesiredCapacity: '1'
      VPCZoneIdentifier: !Ref Subnets
